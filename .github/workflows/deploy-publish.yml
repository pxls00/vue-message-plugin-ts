name: Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [ 18.x ]

    name: Node ${{ matrix.node }} sample

    steps:
      - uses: actions/checkout@v3


      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Eslint error fix
        run: yarn lint:fix

      - name: Eslint error check
        run: yarn lint:check
        
      - name: Build project
        run: yarn build

  deploy:
    needs: build
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install Dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - uses: lowply/deploy-firebase@v0.0.5
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        FIREBASE_PROJECT: test-task-fb7b6
  
  publush:
    name: Publish to NPM
    needs: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 18.x ]
    
    steps:  
      - name: 'checkout'
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'
      
      - name: 'Publish'
        run: 'npm publish --access public'
        env: 
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
  
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: pxls00/test_task_image:latest